DROP TABLE IF EXISTS guilds;
CREATE TABLE guilds
(
    akbMemberMstId INTEGER,
    autoExpulsionType SMALLINT,
    bannerMstId INTEGER,
    beforeGvgTimeType SMALLINT,
    createdTime TIMESTAMP,
    currentGuildTitleMstId INTEGER,
    favoriteAkbMember INTEGER,
    guildCountryCode SMALLINT,
    guildDataId INTEGER NOT NULL,
    guildDescription VARCHAR(50),
    guildIdentifierId VARCHAR(10),
    guildLanguageUserCode SMALLINT,
    guildLevel SMALLINT,
    guildMasterCharacterMstId INTEGER,
    guildMasterImg INTEGER,
    guildMasterName VARCHAR(10),
    guildMasterUserId BIGINT,
    guildName VARCHAR(16),
    guildPoint INTEGER,
    guildRank SMALLINT,
    gvgDraw INTEGER,
    gvgLose INTEGER,
    gvgPushCallComment VARCHAR(50),
    gvgTimeType SMALLINT,
    gvgWin INTEGER,
    isAutoAccept BOOLEAN,
    isGvgPushCall BOOLEAN,
    isRecording BOOLEAN,
    isRecruit BOOLEAN,
    joinMember SMALLINT,
    lastRank SMALLINT,
    masterCharacterMstId INTEGER,
    masterLeaderCardMstId INTEGER,
    masterName VARCHAR(10),
    maxMember SMALLINT,
    memberNum SMALLINT,
    ranking INTEGER,
    siegeHp INTEGER,
    siegeHpBonus INTEGER,
    subscriptionActionType SMALLINT,
    subscriptionComment VARCHAR(50),
    subscriptionGvgJoinType SMALLINT,
    subscriptionPowerType SMALLINT,
    subscriptionStyleType SMALLINT,
    tacticsDescription VARCHAR(2000),
    totalPower INTEGER,
    updated_at TIMESTAMPTZ NOT NULL DEFAULT (NOW() AT TIME ZONE 'utc'),
    PRIMARY KEY (guildDataId)
);


DROP TABLE IF EXISTS gc_data;
CREATE TABLE gc_data
(
    gcDay SMALLINT NOT NULL,
    achievementCount SMALLINT,
    guildCountryCode SMALLINT,
    guildDataId INTEGER NOT NULL,
    guildLevel SMALLINT,
    guildMasterGvgCharacterMstId INTEGER,
    guildMasterName VARCHAR(10),
    guildMasterUserId BIGINT,
    guildName VARCHAR(16),
    gvgEventId VARCHAR NOT NULL,
    gvgEventRankingDataId INTEGER,
    gvgTimeType SMALLINT,
    isDeleted BOOLEAN,
    isEntryUltimateBattle SMALLINT,
    memberNum SMALLINT,
    point BIGINT,
    rank SMALLINT,
    ranking SMALLINT,
    rankingInBattleTerm SMALLINT,
    sourceCount SMALLINT,
    winPoint SMALLINT,
    updated_at TIMESTAMPTZ NOT NULL DEFAULT (NOW() AT TIME ZONE 'utc'),
    PRIMARY KEY (gvgEventId, gcDay, guildDataId)
);

DROP TABLE IF EXISTS player_data;
CREATE TABLE player_data
(
    attackTotalPower INTEGER,
    characterPoint INTEGER,
    cleaningUpdatedTime TIMESTAMP,
    comment VARCHAR(135),
    createdTime INTEGER,
    currentJobRolePosition SMALLINT,
    currentJobRoleType SMALLINT,
    currentTotalPower INTEGER,
    deckCost SMALLINT,
    defenceTotalPower INTEGER,
    exp BIGINT,
    guildDataId INTEGER,
    gvgJobRolePosition SMALLINT,
    gvgJobRoleType SMALLINT,
    gvgSpReductionLevel SMALLINT,
    gvgTotalPower INTEGER,
    isFrontRowChange BOOLEAN,
    isGameMaster BOOLEAN,
    isGuildMaster BOOLEAN,
    isGuildSubMaster BOOLEAN,
    isJoinGuild BOOLEAN,
    lastAccessTime TIMESTAMP,
    level SMALLINT,
    magicAttackTotalPower INTEGER,
    magicDefenceTotalPower INTEGER,
    maxCard SMALLINT,
    maxFriend SMALLINT,
    maxHp INTEGER,
    maxItem INTEGER,
    maxMainLimitBreakSkill INTEGER,
    maxNightMare INTEGER,
    maxOtherCard INTEGER,
    maxProtector INTEGER,
    maxStorageCard INTEGER,
    maxStorageNightMare INTEGER,
    maxStorageOtherCard INTEGER,
    maxStorageProtector INTEGER,
    maxSubLimitBreakSkill INTEGER,
    maxSupportJob INTEGER,
    money INTEGER,
    numericCountryCode INTEGER,
    playerId INTEGER,
    questSpReductionLevel SMALLINT,
    recentLoginTime VARCHAR(7),
    stamina SMALLINT,
    staminaMax SMALLINT,
    staminaUpdatedTime TIMESTAMP,
    totalPower INTEGER,
    tutorialFinishTime TIMESTAMP,
    userId INTEGER NOT NULL,
    userName VARCHAR(16),
    updated_at TIMESTAMPTZ NOT NULL DEFAULT (NOW() AT TIME ZONE 'utc'),
    PRIMARY KEY(userId)
);